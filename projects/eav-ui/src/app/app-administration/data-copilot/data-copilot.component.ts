import { HttpClient } from '@angular/common/http';
import { Component } from '@angular/core';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import { MatSelectModule } from '@angular/material/select';
import { Context } from '../../shared/services/context';
import { take } from 'rxjs';
import { CommonModule } from '@angular/common';
import { RichResult } from '../../shared/models/rich-result';
import { MatSnackBar } from '@angular/material/snack-bar';
import { CopilotService } from '../copilot/copilot-service';

@Component({
  selector: 'app-data-copilot',
  standalone: true,
  imports: [
    MatSelectModule,
    MatButtonModule,
    MatCardModule,
    MatIconModule,
    CommonModule,
  ],
  providers: [
    CopilotService
  ],
  templateUrl: './data-copilot.component.html',
  styleUrl: './data-copilot.component.scss'
})
export class DataCopilotComponent {

  webApiEditions: string = 'admin/code/getEditions';
  webApiGeneratedCode: string = 'admin/code/generateDataModels';
  editions$ = this.copilotSvc.getEditions();

  generators$ = this.copilotSvc.getGenerators();

  selectedGenerator = '';
  selectedEdition = '';

  constructor(
    private http: HttpClient,
    private context: Context,
    private snackBar: MatSnackBar,
    private copilotSvc: CopilotService,
    ) {}

  ngOnInit(): void {

    this.copilotSvc.specs.pipe(take(1)).subscribe(specs => {
      this.selectedGenerator = specs.generators[0]?.name ?? '';
      this.selectedEdition = specs.editions.find(e => e.isDefault)?.name ?? '';
    });
  }

  autoGeneratedCode() {
    this.http.get<RichResult>(this.webApiGeneratedCode, {
      params: {
        appId: this.context.appId.toString(),
        edition: this.selectedEdition,
        generator: this.selectedGenerator,
      }
    }).subscribe(d => {
      console.log(d);
      this.snackBar.open(d.message + `\n (this took ${d.timeTaken}ms)`, null, { duration: 5000, });
    });
  }

}
